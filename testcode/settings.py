"""
Django settings for testcode project.

Generated by 'django-admin startproject' using Django 2.0.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
import sys
import datetime

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import environs

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

sys.path.insert(0, os.path.join(BASE_DIR, "apps/"))
sys.path.insert(0, os.path.join(BASE_DIR, "utils/"))
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/
env = environs.Env()
env.read_env(os.path.join(BASE_DIR, '.env'))
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'o46k0xb@pm!4t%e=y%d_bjdhzw&==+k$6m8-+9y_d49h*c_-hz'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "apps.ecs",
    # 'extra_apps.xadmin',
    "crispy_forms",
    "reversion",
    "corsheaders",
    "rest_framework",
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",  # corsheaders对应的中间件，优先级尽可能的高，也就是放在最前面
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'testcode.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'testcode.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/
# DRF
REST_FRAMEWORK = {
    # 　认证方式
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework.authentication.SessionAuthentication",
        "rest_framework.authentication.BasicAuthentication",
    ),
    # 权限
    "DEFAULT_PERMISSION_CLASSES": ("rest_framework.permissions.AllowAny",),
    "DEFAULT_FILTER_BACKENDS": ("django_filters.rest_framework.DjangoFilterBackend",),
}

if not DEBUG:
    # 正式环境的时候需配置返回为jons渲染器，不然会暴露drf样式 html给用户
    REST_FRAMEWORK["DEFAULT_RENDERER_CLASSES"] = [
        "rest_framework.renderers.JSONRenderer"
    ]

# JWT_AUTH ：声明JWT_AUTH相关全局配置
# jwt-token的过期时间设置,days=7表示获取一次jwt token可以用7天
JWT_AUTH = {
    "JWT_EXPIRATION_DELTA": datetime.timedelta(days=30),
    # 自定义header = {'Authenticate':'JWT jwt-token'}中的这个JWT参数，这里我没改
    "JWT_AUTH_HEADER_PREFIX": "JWT",
}

# 跨域增加忽略
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_METHODS = (
    "DELETE",
    "GET",
    "POST",
    "PUT",
)

CORS_ALLOW_HEADERS = (
    "Access-Control-Allow-Origin",
    "XMLHttpRequest",
    "X_FILENAME",
    "accept-encoding",
    "authorization",
    "content-type",
    "dnt",
    "origin",
    "user-agent",
    "x-csrftoken",
    "x-requested-with",
    "Pragma",
)

PREFIX = env.str('PREFIX')
END_POINT = env.str('END_POINT')  # OSS存储节点
BUCKET_NAME = env.str('BUCKET_NAME')
MEDIA_URL_ALIYUN = 'https://' + BUCKET_NAME + '.' + END_POINT + '/'
# 阿里云主账号AccessKey拥有所有API的访问权限，风险很高。
ACCESS_KEY_ID = env.str('ACCESS_KEY_ID')
ACCESS_KEY_SECRET = env.str('ACCESS_KEY_SECRET')

LANGUAGE_CODE = "zh-Hans"
TIME_ZONE = "Asia/Shanghai"  # 上海时区
USE_I18N = True
USE_L10N = True
USE_TZ = False
# 静态文件
if DEBUG:
    STATICFILE_DIRS = [os.path.join(BASE_DIR, "static")]
else:
    STATIC_ROOT = "staticfiles"

STATIC_URL = "/static/"

CELERY_BROKER_URL = "redis://127.0.0.1:6379/0"
